@model PaginatedList<TuitionDbv1.Models.Student>
@using PagedList.Mvc

@using TuitionDbv1
@using TuitionDbv1.Models



<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Students";
}

<h1>View Students</h1>


<h6>(Total Students is "@ViewBag.Sc")</h6>
<h6>Page Number: @Model.PageIndex </h6>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Students" asp-action="Index">
    <p>
        Search by student name: &nbsp; <input type="text" name="searchStudent" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.First().StudentFirstName)</th>
            <th>@Html.DisplayNameFor(model => model.First().StudentLastName)</th>
            <th>@Html.DisplayNameFor(model => model.First().StudentPhone)</th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StudentSchoolSortParm"]">@Html.DisplayNameFor(model => model.First().StudentSchool)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["YearLevelSortParm"]">@Html.DisplayNameFor(model => model.First().YearLevel)</a>
            </th>
            <th>@Html.DisplayNameFor(model => model.First().Course)</th>
            <th>@Html.DisplayNameFor(model => model.First().PaymentType)</th>
            <th>@Html.DisplayNameFor(model => model.First().BillingAddress)</th>
            <th>@Html.DisplayNameFor(model => model.First().JoinDate)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            var intCount = 0;
        }
        @foreach (var item in Model)
        {
            intCount++;
            <tr>
                <td>@Html.DisplayFor(modelItem => item.StudentFirstName)</td>
                <td>@Html.DisplayFor(modelItem => item.StudentLastName)</td>
                <td>@Html.DisplayFor(modelItem => item.StudentPhone)</td>
                <td>@Html.DisplayFor(modelItem => item.StudentSchool)</td>
                <td>@Html.DisplayFor(modelItem => item.YearLevel)</td>
                <td>@Html.DisplayFor(modelItem => item.Course)</td>
                <td>@Html.DisplayFor(modelItem => item.PaymentType)</td>
                <td>@Html.DisplayFor(modelItem => item.BillingAddress)</td>
                <td>@Html.DisplayFor(modelItem => item.JoinDate)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.StudentId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.StudentId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.StudentId">Delete</a>
                </td>
            </tr>
        }

        @if (intCount == 0)
        {
            <tr>
                <td colspan="10">
                    <h2>No Students found</h2>
                </td>
            </tr>
        }
    </tbody>
</table>

<br />

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
