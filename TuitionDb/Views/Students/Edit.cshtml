@model TuitionDbv1.Models.Student
@using TuitionDbv1.Models
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit a record!</h1>

<h4>Students table</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="StudentId" />
            <div class="form-group">
                <label asp-for="StudentFirstName" class="control-label"></label>
                <input asp-for="StudentFirstName" class="form-control" />
                <span asp-validation-for="StudentFirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StudentLastName" class="control-label"></label>
                <input asp-for="StudentLastName" class="form-control" />
                <span asp-validation-for="StudentLastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StudentPhone" class="control-label"></label>
                <input asp-for="StudentPhone" class="form-control" />
                <span asp-validation-for="StudentPhone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StudentSchool" class="control-label"></label>
                <input asp-for="StudentSchool" class="form-control" />
                <span asp-validation-for="StudentSchool" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="YearLevel" class="control-label"></label>
                <select asp-for="YearLevel" class="form-control">
                    <!--added the default option of Please select to avoid user misentry-->
                    <option value="">--- Please Select ---</option>
                    @foreach (var value in Enum.GetValues(typeof(StudentYearLevel)))
                    {
                        <option value="@value">@value</option>
                    }
                </select>
                <span asp-validation-for="YearLevel" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Course" class="control-label"></label>
                <select asp-for="Course" class="form-control">
                    <!--added the default option of Please select to avoid user misentry-->
                    <option value="">--- Please Select ---</option>
                    @foreach (var value in Enum.GetValues(typeof(StudentCourse)))
                    {
                        <option value="@value">@value</option>
                    }
                </select>
                <span asp-validation-for="Course" class="text-danger"></span>
            </div>
          <div class="form-group">
                <label asp-for="PaymentType" class="control-label"></label>
                <select asp-for="PaymentType" class="form-control">
                    <!--added the default option of Please select to avoid user misentry-->
                    <option value="">--- Please Select ---</option>
                    <!--displays the enum values properly-->
                    @foreach (var value in Enum.GetValues(typeof(PaymentMethod)))
                    {
                        if (value.Equals(PaymentMethod.BankTransfer))
                        {
                            var displayText = value.ToString().Insert(4, " "); // inserts a space character at four characters for readability, so 'Bank Transfer' instead of 'BankTransfer'
                            <option value="@value">@displayText</option>
                        }
                        else if (value.Equals(PaymentMethod.DirectDebit))
                        {
                            var displayText = value.ToString().Insert(6, " "); // inserts a space character at six characters for readability, so 'Direct Debit' instead of 'DirectDebit'
                            <option value="@value">@displayText</option>
                        }
                        else if (value.Equals(PaymentMethod.Cash))
                        {
                            var displayText = value.ToString();
                            <option value="@value">@displayText</option>
                        }

                    }
                </select>
                <span asp-validation-for="PaymentType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BillingAddress" class="control-label"></label>
                <input asp-for="BillingAddress" class="form-control" />
                <span asp-validation-for="BillingAddress" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="JoinDate" class="control-label"></label>
                @{
                    DateOnly minDate = DateOnly.FromDateTime(DateTime.Today.AddMonths(-1)); //adds min date value of one month from the current date
                }
                <input asp-for="JoinDate" type="date" class="form-control" min="@minDate.ToString("yyyy-MM-dd")" max="@DateTime.Today.Date.ToString("yyyy-MM-dd")">
                <!--sets minimum date to one month ago, and maximum date to the current day-->
                <span asp-validation-for="JoinDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
